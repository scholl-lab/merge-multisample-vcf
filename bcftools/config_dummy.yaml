# config.yaml

# Path to the file listing all input VCF files (one per line)
# Replace with your own path or list file
vcf_list_file: "input/input.list"

# Number of VCFs to process per batch during merging
vcfs_per_batch: 100

# Directory where the results will be stored
output_folder: "results"

# Conda environment containing bcftools
conda_env: "bcftools"

# Reference FASTA file for normalization
# Replace with your own reference path
reference_fasta: "/path/to/hs37d5.fa"

# Info rules to be used for merging
info_rules: "BaseQRankSum:avg,ExcessHet:avg,FS:avg,MQ:avg,MQRankSum:avg,QD:avg,ReadPosRankSum:avg,SOR:avg,DP:avg,AF:sum,AS_BaseQRankSum:avg,AS_FS:avg,AS_MQ:avg,AS_MQRankSum:avg,AS_QD:avg,AS_ReadPosRankSum:avg,AS_SOR:avg,AS_UNIQ_ALT_READ_COUNT:avg,MLEAC:avg,MLEAF:avg,AN:sum,AC:sum"

# Desired name for the final merged VCF file
final_output_name: "my_final_merged.vcf.gz"

# Final filter logic to be applied to the merged VCF. 
# "x" => record is PASS if *any* input is PASS
# "+" => record is PASS only if *all* inputs are PASS
final_filter_logic: "x"
